-- File name: CedarsDatabase.sql
-- Description: Cedars Database for shiny app. Follows rules 
--              based on logical Relational Database design. 
-- Style: snake_case, as per PostgreSQL Documentation. 


-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
-- Validation tables
CREATE TABLE accounts (
    account_id integer PRIMARY KEY,
    account_description varchar NOT NULL,
    overhead_incurred boolean,
    a_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    a_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE vendors (
    vendor_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    vendor_name varchar NOT NULL,
    v_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    v_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
-- Data tables
CREATE TABLE research_projects (
    project_id integer PRIMARY KEY,   
    activity_number integer UNIQUE,
    contract_number varchar(255),
    award_number varchar(255),
    fund_code smallint,                 -- need list of options. Add check later
    proj_sponsor varchar,
    proj_title varchar,
    total_award numeric(15, 2) NOT NULL CHECK (total_award >= 0),
    projpersonnel_start_date date,      
    projpersonnel_end_date date,
    department varchar,
    division varchar,
    subdivision varchar,
    proj_type varchar(255) NOT NULL,
    irb varchar(255),
    iacuc varchar(255),
    proj_start_date date,
    proj_end_date date,
    proj_status varchar(255) NOT NULL,
    requirement text,
    proj_note_date date,
    proj_note text,
    activityid smallint,         -- only 1 digit
    rp_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    rp_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CHECK (proj_end_date > proj_start_date),
    CHECK (projpersonnel_start_date >= proj_start_date),
    CHECK (projpersonnel_end_date > projpersonnel_start_date)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE project_personnel (
    eid integer PRIMARY KEY,
    first_name varchar(255),
    last_name varchar, 
    fte numeric(5,2) NOT NULL CHECK (fte >= 0 AND fte <= 1),   
    next_meeting_date date,
    salary_base_hourly numeric(10, 2),
    pers_review_month smallint,
    pp_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    pp_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CHECK (pers_review_month > 0 AND pers_review_month <= 12)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE project_personnel_effort (
    project_id integer REFERENCES research_projects (project_id) ON DELETE CASCADE,
    eid integer REFERENCES project_personnel (eid) ON DELETE CASCADE,
    effort_allocated numeric(5, 2),
    fringe_rate numeric(5, 2),
    budgeted_percentage_effort numeric(5, 2) NOT NULL,
    costshared_percentage_effort numeric(5, 2),
    pers_type varchar(255),             -- check for factor type will be in app
    pi boolean,
    key_personnel boolean,
    salary_cap boolean,
    pers_end_date date,
    ppe_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ppe_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT effort_key PRIMARY KEY (project_id, eid),
    CHECK (effort_allocated >= 0 AND effort_allocated <= 100),
    CHECK (fringe_rate >= 0 AND fringe_rate <= 100),
    CHECK (budgeted_percentage_effort >= 0 AND budgeted_percentage_effort <= 100),
    CHECK (costshared_percentage_effort >= 0 AND costshared_percentage_effort <= 100)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE period_budgeted_effort (
    period_effort_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id integer REFERENCES research_projects (project_id) ON DELETE CASCADE NOT NULL,
    eid integer REFERENCES project_personnel (eid) ON DELETE CASCADE NOT NULL,
    period_duration varchar(255),       -- app logic
    period smallint,                      
    period_budget numeric(15, 2),
    perseffort_percentage numeric(5, 2),    -- do I need this? Check notes
    effort_allocated numeric(5, 2),
    perseffort_total numeric(10, 2),
    pbe_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    pbe_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "FK_PBE_ID" FOREIGN KEY (project_id, eid) REFERENCES project_personnel_effort (project_id, eid) ON DELETE CASCADE, -- correct syntax? NOT NULL not working
    CHECK (perseffort_percentage  >= 0 AND perseffort_percentage <= 100),
    CHECK (effort_allocated >= 0 AND effort_allocated <= 100)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE project_budget (
    budget_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id integer REFERENCES research_projects (project_id) ON DELETE CASCADE NOT NULL,
    proj_budget numeric(15, 2) NOT NULL CHECK (proj_budget >= 0),
    total_revenue numeric(15, 2),
    proj_balance numeric(15, 2) NOT NULL,
    proj_available_balance numeric(15, 2) NOT NULL,
    proj_balance_after_costsharing numeric(15, 2) NOT NULL,
    proj_balance_at_fy_start numeric(15, 2) NOT NULL,
    academic_funding numeric(15, 2),
    discretional_funding numeric(15, 2),
    award_start_date date,
    award_end_date date,
    grant_officer varchar,
    summary_note text,
    action_item text,
    pb_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    pb_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE revenue_details (
    revenue_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id integer REFERENCES research_projects (project_id) ON DELETE CASCADE NOT NULL,
    cash_revenue numeric(15, 2),
    fixed_revenue numeric(15, 2),
    transaction_date date,
    transaction_description text,
    revenue_detail_note text,
    dashboard_note text,
    rd_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    rd_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE project_costs (
    costs_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id integer REFERENCES research_projects (project_id) ON DELETE CASCADE NOT NULL,
    proj_total_cost numeric(15, 2) NOT NULL,
    proj_transfer_total numeric(15, 2),
    proj_encumbrance_total numeric(15, 2),
    costsharing numeric(15, 2),
    pc_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    pc_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE period_resource_costs (
    rescost_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    account_id integer REFERENCES accounts (account_id) ON DELETE RESTRICT NOT NULL,
    project_id integer REFERENCES research_projects (project_id) ON DELETE CASCADE NOT NULL,
    rescost_period smallint,                -- Do I have to fix this?
    rescost_period_duration varchar(255),
    period_cost numeric(15, 2) CHECK (period_cost >= 0),
    prc_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    prc_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE account_costs (
    acccost_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id integer REFERENCES research_projects (project_id) ON DELETE CASCADE NOT NULL,
    eid integer REFERENCES project_personnel (eid) ON DELETE RESTRICT,
    account_id integer REFERENCES accounts (account_id) ON DELETE RESTRICT NOT NULL,
    journalid varchar(255),
    account_cost numeric(15, 2) NOT NULL CHECK (account_cost >= 0),
    cost_date date NOT NULL,
    resource_subcategory varchar NOT NULL,
    cost_description text,
    ac_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ac_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE subawards (
    po_number integer PRIMARY KEY,          -- might be bigint
    vendor_id integer REFERENCES vendors (vendor_id) ON DELETE RESTRICT NOT NULL,
    subaward_amount numeric(15, 2) NOT NULL CHECK (subaward_amount >= 0),
    subaward_encumbrance_total numeric(15, 2) NOT NULL,
    subaward_note text,
    subaward_start_date date NOT NULL,
    subaward_expiration_date date NOT NULL,
    s_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    s_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CHECK (subaward_encumbrance_total >= 0),
    CHECK (subaward_expiration_date > subaward_start_date)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
-- Linking table
CREATE TABLE project_subawards (
    project_id integer REFERENCES research_projects (project_id),
    po_number integer REFERENCES subawards (po_number),
    report_due_date date,
    ps_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ps_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT project_subawards_key PRIMARY KEY (project_id, po_number)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE purchase_orders (
    purorders_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,       -- see if this breaks
    project_id integer REFERENCES research_projects (project_id) ON DELETE CASCADE NOT NULL,    
    po_number integer REFERENCES subawards (po_number) ON DELETE RESTRICT,           -- Can be empty for Proj PO
    po_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    po_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "FK_PO_ID" FOREIGN KEY (project_id, po_number) REFERENCES project_subawards (project_id, po_number)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE po_invoice (
    po_invoice_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    invoice_number integer NOT NULL,             -- might be bigint    
    purorders_id integer REFERENCES purchase_orders (purorders_id) ON DELETE RESTRICT NOT NULL,
    invoice_cost numeric(15, 2) NOT NULL CHECK (invoice_cost >= 0),
    invoice_period daterange NOT NULL,    -- Should be date interval
    invoice_date date NOT NULL,
    pi_approval_date date,
    invoice_note text,
    subk_first_25k numeric(15, 2),
    subk_above_25k numeric(15, 2),
    voucherid integer UNIQUE,
    pi_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    pi_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE subawards_modifications (
    subawards_mod_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    po_number integer REFERENCES subawards (po_number) ON DELETE CASCADE NOT NULL,
    modification smallint,
    subaward_additional_funds numeric(15, 2),
    subaward_expiration_date date,
    sm_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    sm_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CHECK (subaward_additional_funds >= 0)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE grant_applications (
    grant_app_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    app_policy_description text,
    app_sponsor varchar,
    app_sponsor_type varchar(255),
    app_type varchar(255),
    rfa_number varchar(255),
    pa_number varchar(255),
    app_proj_title varchar,
    app_submission_date date,
    app_due_date date,
    app_date_approved date,
    app_direct_cost numeric(15, 2),
    app_indirect_cost numeric(15, 2),
    app_total_cost numeric(15, 2),
    app_number_of_years smallint,
    app_pi_effort numeric(5, 2),
    app_status varchar(255),
    app_note text,
    app_score smallint CHECK (app_score >= 0 AND app_score <= 10),
    ga_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ga_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
-- Linking tables
CREATE TABLE personnel_subawards (
    eid integer REFERENCES project_personnel (eid),
    po_number integer REFERENCES subawards (po_number),
    pes_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    pes_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pers_subawards_key PRIMARY KEY (eid, po_number)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE TABLE personnel_grantapps (
    eid integer REFERENCES project_personnel (eid),
    grant_app_id integer REFERENCES grant_applications (grant_app_id),
    pg_created_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    pg_updated_at timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pers_grantapps_key PRIMARY KEY (eid, grant_app_id)
);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------


-- Notes:
-- * Change all serial? - DONE
-- * Don't use money. Numeric is better
-- Type checks:
-- * Go through dates - DONE
-- * Change varchar to varchar(255) or varchar() - DONE
-- * Change int to - DONE
--      * Use smallint for dates/etc., 5 digits
--      * Use integer for whole numbers, 10 digits
--      * Use numeric(15, 2) for money (1,000,000,000,000.00)
--      * Use numeric(5, 2) for percentages, ie 100.00% stored as 100.00
--      * NOTE: fringe rate is (6, 4)
--      * Use numeric(10, 2) for salary (10,000,000.00)
--
-- Reg tables - DONE
-- Valid tables - DONE
-- Link tables - DONE
--
-- Check all tables - HERE
-- Do constraints:
-- 
--
-- CHECK, UNIQUE, NOT NULL, primary key, foreign key 
--
--
-- Style syntax update: 
-- * Updated table names to snake_case - DONE
-- * Go through and change every field name to snake_case - DONE
-- * Do constraints from field specs and generalize field properties - DONE
-- * Check constraints - done but should be checked and redone in app anyway
-- * Fill in relationships, ie NOT NULL if mandatory, etc. - DONE
-- * Deletions cascade/deny/.. in SQL, updates. See Postgres Docs - DONE
--      Didn't do updates. Didn't do linking tables?
-- NOTE: dbml didn't work well w/ ON DELETE
-- * Insert created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
-- *              modified_at ...
--last_modified_datetime timestamp with time zone NOT NULL,
--    created_at timestamp with time zone NOT NULL
-- * TODO: I added updated_at. This needs triggers in update statement. 
--          Atm, I am not that far ahead.
-- * TODO: Write insert views, test them.
-- * TODO: Write transaction blocks for inserts, updates, etc.

-- * TODO: New fields:
-- project_financial_manager (DRA) from PFR

-- * Ask Ray if I should use .00 or 100.00


